{"version":3,"sources":["schema/styles.js","schema/cvForm.js","utils/uniqid.js","utils/convertFormSchema.js","context.js","components/Preview/styles.js","components/Preview/styled.js","components/Preview/Header.js","components/Preview/Profile.js","components/Preview/Skills.js","components/Preview/GenericSection.js","components/Preview/index.js","utils/reduceToValue.js","components/FormGroup.js","hooks/useDebounce.js","components/FormBlock.js","components/Form.js","App.js","index.js"],"names":["defaultStyles","block","variant","field","fullWidth","span","xs","halfWidth","sm","emailRegex","validateLength","allowableLength","str","length","cvFormSchema","personal","displayName","muiStyle","styles","fields","firstName","type","required","autocomplete","lastName","title","email","validate","test","phone","address","details","placeholder","rows","skills","helperText","split","some","skill","trim","experience","multiple","position","company","description","startDate","endDate","education","defaultGroups","school","degree","training","name","uniqid","Math","random","toString","substr","convertFormGroupSchema","obj","id","Object","entries","forEach","schema","value","defaultValue","error","errorMsg","FormContext","createContext","FormProvider","props","useReducer","state","action","payload","blockName","groupId","data","groups","filter","group","map","Array","fill","convertFormBlockSchema","dispatch","contextValue","useMemo","Provider","children","useFormReducer","context","useContext","Error","globalStyles","StyleSheet","create","fontSize","fontWeight","textTransform","marginBottom","subtitle","text","section","paddingBottom","Divider","color","width","stroke","strokeStyle","mt","mb","style","_style","borderBottom","marginTop","Wrapper","wrap","fixed","StyledText","Section","Title","Subtitle","NormalText","defaultProps","fullName","display","flexWrap","flexDirection","justifyContent","contactInfo","paddingVertical","paddingHorizontal","Header","padding","fullname","Profile","textAlign","chip","border","borderRadius","marginRight","Skills","withDivider","i","GenericSection","mappings","entry","alignItems","page","Preview","formData","reduce","reducedData","blockData","groupData","isDate","format","values","every","reduceToValue","content","height","className","size","FormGroup","blockStyle","deleteHandler","initialState","delay","useState","setValue","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","debouncedFormData","setFormData","validateInput","fieldSchema","handleChange","fieldData","isInvalid","newData","prevData","handleBlur","createInput","defaultCountry","onBlur","e","target","onChange","DatePicker","date","onAccept","inputVariant","clearable","disableFuture","TextField","inputFields","label","undefined","inputProps","InputLabelProps","shrink","autoComplete","multiline","Grid","item","Box","container","spacing","Button","onClick","FormBlock","handleDelete","Typography","gutterBottom","Form","onSubmit","preventDefault","errors","newGroupData","fieldName","push","noValidate","blockSchema","darkTheme","createMuiTheme","palette","lightTheme","App","isDarkModeEnabled","useMediaQuery","showPreview","setShowPreview","errorMessages","setErrorMessages","ThemeProvider","theme","CssBaseline","Paper","square","elevation","component","mx","Container","maxWidth","Alert","severity","AlertTitle","margin","msg","utils","DateFnsUtils","p","join","window","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95d0b930.chunk.js","sourcesContent":["const defaultStyles = {\n  block: {\n    variant: 'outlined',\n  },\n  field: {\n    fullWidth: {\n      span: {\n        xs: 12,\n      },\n    },\n    halfWidth: {\n      span: {\n        xs: 12,\n        sm: 6,\n      },\n    },\n  },\n};\n\nexport default defaultStyles;\n","import styles from './styles';\n\nconst emailRegex =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\nconst validateLength = (allowableLength) => (str) =>\n  str.length > allowableLength\n    ? `Must be less than ${allowableLength} characters`\n    : '';\n\nconst cvFormSchema = {\n  personal: {\n    displayName: 'Personal Information',\n    muiStyle: {\n      ...styles.block,\n    },\n    fields: {\n      firstName: {\n        type: 'text',\n        displayName: 'First name',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      lastName: {\n        type: 'text',\n        displayName: 'Last name',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      title: {\n        type: 'text',\n        displayName: 'Title',\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      email: {\n        type: 'email',\n        displayName: 'Email',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n        validate: (str) =>\n          emailRegex.test(str) ? '' : 'Invalid email address',\n      },\n      phone: {\n        type: 'phone',\n        displayName: 'Phone number',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      address: {\n        type: 'text',\n        displayName: 'Address',\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.fullWidth,\n        },\n      },\n      details: {\n        type: 'multiline',\n        displayName: 'Profile',\n        placeholder: 'About yourself',\n        muiStyle: {\n          ...styles.field.fullWidth,\n          rows: 5,\n        },\n        validate: validateLength(500),\n      },\n      skills: {\n        type: 'multiline',\n        displayName: 'Skills',\n        helperText: 'Separate different skills with comma',\n        muiStyle: {\n          ...styles.field.fullWidth,\n          rows: 3,\n        },\n        validate: (str) => {\n          const validate = validateLength(50);\n          return str.split(',').some((skill) => validate(skill.trim()))\n            ? 'Individual skill must be less than 50 characters'\n            : '';\n        },\n      },\n    },\n  },\n  experience: {\n    displayName: 'Experience',\n    muiStyle: {\n      ...styles.block,\n    },\n    multiple: true,\n    fields: {\n      position: {\n        type: 'text',\n        displayName: 'Position',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      company: {\n        type: 'text',\n        displayName: 'Company',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      description: {\n        type: 'multiline',\n        displayName: 'Job description',\n        muiStyle: {\n          ...styles.field.fullWidth,\n          rows: 5,\n        },\n        validate: validateLength(500),\n      },\n      startDate: {\n        type: 'date',\n        displayName: 'From',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      endDate: {\n        type: 'date',\n        displayName: 'To',\n        helperText: 'Leave this out if still working at present',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n    },\n  },\n  education: {\n    displayName: 'Education',\n    muiStyle: {\n      ...styles.block,\n    },\n    multiple: true,\n    defaultGroups: 0,\n    fields: {\n      school: {\n        type: 'text',\n        displayName: 'School',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.fullWidth,\n        },\n      },\n      degree: {\n        type: 'text',\n        displayName: 'Degree',\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.fullWidth,\n        },\n      },\n      startDate: {\n        type: 'date',\n        displayName: 'From',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      endDate: {\n        type: 'date',\n        displayName: 'To',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n    },\n  },\n  training: {\n    displayName: 'Training / Certifications',\n    muiStyle: {\n      variant: 'outlined',\n    },\n    multiple: true,\n    defaultGroups: 0,\n    fields: {\n      name: {\n        type: 'text',\n        displayName: 'Name',\n        placeholder: 'Training / Certificate',\n        required: true,\n        autocomplete: true,\n        muiStyle: {\n          ...styles.field.fullWidth,\n        },\n      },\n      startDate: {\n        type: 'date',\n        displayName: 'From',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n      endDate: {\n        type: 'date',\n        displayName: 'To',\n        muiStyle: {\n          ...styles.field.halfWidth,\n        },\n      },\n    },\n  },\n};\n\nexport default cvFormSchema;\n","export const uniqid = () => Math.random().toString(36).substr(2, 5);\n","import { uniqid } from './uniqid';\n\nexport const convertFormGroupSchema = (fields) => {\n  const obj = { id: uniqid(), fields: {} };\n\n  Object.entries(fields).forEach(([name, schema]) => {\n    obj.fields[name] = {\n      value: schema.defaultValue || '',\n      error: false,\n      errorMsg: '',\n    };\n  });\n\n  return obj;\n};\n\nexport const convertFormBlockSchema = (schema) => {\n  const obj = {};\n\n  Object.entries(schema).forEach(([name, schema]) => {\n    obj[name] = {\n      id: uniqid(),\n      groups: new Array(schema.defaultGroups ?? 1)\n        .fill()\n        .map(() => convertFormGroupSchema(schema.fields)),\n    };\n  });\n\n  return obj;\n};\n","import { createContext, useContext, useMemo, useReducer } from 'react';\nimport { convertFormBlockSchema, convertFormGroupSchema } from './utils/index';\n\nconst formContextReducer = (schema) => (state, action) => {\n  const { blockName, groupId, data } = action.payload;\n  const block = state[blockName];\n\n  switch (action.type) {\n    case 'WRITE':\n      return data;\n    case 'ADD':\n      return {\n        ...state,\n        [blockName]: {\n          ...block,\n          groups: [\n            ...block.groups,\n            convertFormGroupSchema(schema[blockName].fields),\n          ],\n        },\n      };\n    case 'DELETE':\n      return {\n        ...state,\n        [blockName]: {\n          ...block,\n          groups: block.groups.filter((group) => group.id !== groupId),\n        },\n      };\n    case 'UPDATE':\n      return {\n        ...state,\n        [blockName]: {\n          ...block,\n          groups: block.groups.map((group) => {\n            if (group.id === groupId) return { ...group, fields: data };\n\n            return group;\n          }),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst FormContext = createContext(null);\n\nconst FormProvider = (props) => {\n  const [data, dispatch] = useReducer(\n    formContextReducer(props.schema),\n    convertFormBlockSchema(props.schema)\n  );\n  const contextValue = useMemo(() => ({ data, dispatch }), [data, dispatch]);\n\n  return (\n    <FormContext.Provider value={contextValue}>\n      {props.children}\n    </FormContext.Provider>\n  );\n};\n\nconst useFormReducer = () => {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useFormReducer must be used within a FormProvider');\n  }\n  return context;\n};\n\nexport { FormProvider, useFormReducer };\n","import { StyleSheet } from '@react-pdf/renderer';\n\nconst globalStyles = StyleSheet.create({\n  title: {\n    fontSize: 18,\n    fontWeight: 900,\n    textTransform: 'uppercase',\n    marginBottom: 7,\n  },\n  subtitle: {\n    fontSize: 13,\n    fontWeight: 500,\n    textTransform: 'uppercase',\n    marginBottom: 3,\n  },\n  text: {\n    fontSize: 11,\n  },\n  section: {\n    paddingBottom: 10,\n  },\n});\n\nexport default globalStyles;\n","import { StyleSheet } from '@react-pdf/renderer';\nimport { Text, View } from '@react-pdf/renderer';\nimport globalStyles from './styles';\n\nconst Divider = ({ color, width, stroke, strokeStyle, mt, mb, ...style }) => {\n  const _style = StyleSheet.create({\n    width,\n    borderBottom: `${stroke} ${strokeStyle} ${color}`,\n    marginTop: mt,\n    marginBottom: mb,\n  });\n\n  return <View style={[_style, style]} />;\n};\n\nconst Wrapper = ({ children, wrap, fixed, ...style }) => (\n  <View style={style} wrap={wrap} fixed={fixed}>\n    {children}\n  </View>\n);\n\nconst StyledText = ({ children, ...style }) => (\n  <Text style={style}>{children}</Text>\n);\nconst Section = ({ children, ...style }) => (\n  <Wrapper {...globalStyles.section} {...style}>\n    {children}\n  </Wrapper>\n);\n\nconst Title = ({ children, wrap, fixed, ...style }) => (\n  <StyledText wrap={wrap} fixed={fixed} {...globalStyles.title} {...style}>\n    {children}\n  </StyledText>\n);\n\nconst Subtitle = ({ children, wrap, fixed, ...style }) => (\n  <StyledText wrap={wrap} fixed={fixed} {...globalStyles.subtitle} {...style}>\n    {children}\n  </StyledText>\n);\n\nconst NormalText = ({ children, wrap, fixed, ...style }) => (\n  <StyledText wrap={wrap} fixed={fixed} {...globalStyles.text} {...style}>\n    {children}\n  </StyledText>\n);\n\nconst defaultProps = {\n  wrap: true,\n  fixed: false,\n};\n\nSection.defaultProps = defaultProps;\nTitle.defaultProps = defaultProps;\nSubtitle.defaultProps = defaultProps;\nNormalText.defaultProps = defaultProps;\nWrapper.defaultProps = defaultProps;\nDivider.defaultProps = {\n  width: '100%',\n  color: 'gray',\n  stroke: '1px',\n  strokeStyle: 'solid',\n  mt: 5,\n  mb: 5,\n};\n\nexport { Section, Title, Subtitle, NormalText, Divider, Wrapper, StyledText };\n","import React from 'react';\nimport { View, StyleSheet } from '@react-pdf/renderer';\nimport { NormalText, Divider, StyledText, Subtitle, Wrapper } from './styled';\n\nconst styles = StyleSheet.create({\n  fullName: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  name: {\n    fontSize: 32,\n    color: 'black',\n  },\n  contactInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n  },\n});\n\nconst Header = ({ data }) => {\n  const { firstName, lastName, title, phone, email, address } = data;\n\n  return (\n    <View>\n      <Wrapper padding={10} textTransform=\"uppercase\">\n        <StyledText {...styles.fullname}>\n          <StyledText {...styles.name}>{firstName}</StyledText>\n          <StyledText {...styles.name} color=\"gray\">\n            {' ' + lastName}\n          </StyledText>\n        </StyledText>\n        {title ? <Subtitle>{title}</Subtitle> : null}\n      </Wrapper>\n      <Divider stroke=\"3px\" color=\"black\" mt={0} mb={0} />\n      <Wrapper {...styles.contactInfo}>\n        {phone ? <NormalText>{phone}</NormalText> : null}\n        {email ? <NormalText>{email}</NormalText> : null}\n        {address ? <NormalText>{address}</NormalText> : null}\n      </Wrapper>\n      <Divider stroke=\"1px\" mt={0} mb={15} />\n    </View>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { NormalText, Divider, Section, Title } from './styled';\n\nexport default function Profile({ data }) {\n  return data ? (\n    <>\n      <Section>\n        <Title>Profile</Title>\n        <NormalText textAlign=\"justify\">{data}</NormalText>\n      </Section>\n      <Divider mt={5} mb={15} color=\"gray\" />\n    </>\n  ) : null;\n}\n","import { StyleSheet, Text } from '@react-pdf/renderer';\nimport React from 'react';\nimport { Divider, Section, Title, Wrapper } from './styled';\n\nconst style = StyleSheet.create({\n  skills: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    fontSize: 11,\n    border: '1px solid gray',\n    borderRadius: 10,\n    paddingVertical: 3,\n    paddingHorizontal: 5,\n    marginRight: 3,\n  },\n});\n\nexport default function Skills({ data, withDivider }) {\n  return data ? (\n    <>\n      <Section>\n        <Title>Skills</Title>\n        <Wrapper {...style.skills}>\n          {data.split(',').map((skill, i) => (\n            <Wrapper\n              key={i}\n              {...style.chip}\n              marginBottom={i + 1 === data.length ? 0 : 5}\n            >\n              <Text>{skill.trim()}</Text>\n            </Wrapper>\n          ))}\n        </Wrapper>\n      </Section>\n      {withDivider ? <Divider mt={5} mb={15} color=\"gray\" /> : null}\n    </>\n  ) : null;\n}\n","import React from 'react';\nimport {\n  Divider,\n  NormalText,\n  Section,\n  Subtitle,\n  Title,\n  Wrapper,\n} from './styled';\n\nexport default function GenericSection({ name, data, mappings, withDivider }) {\n  return data.length ? (\n    <>\n      <Section>\n        <Title>{name}</Title>\n        {data.map((entry, i) => (\n          <Wrapper\n            key={i}\n            wrap={false}\n            marginBottom={i + 1 === data.length ? 0 : 10}\n          >\n            <Wrapper\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Subtitle>{entry[mappings[0]]}</Subtitle>\n              <NormalText color=\"gray\">\n                {entry[mappings[1]]} -{' '}\n                {entry[mappings[2]] || (entry[mappings[1]] ? 'Present' : '')}\n              </NormalText>\n            </Wrapper>\n            <NormalText marginBottom={5}>{entry[mappings[3]]}</NormalText>\n            <NormalText>{entry[mappings[4]]}</NormalText>\n          </Wrapper>\n        ))}\n      </Section>\n      {withDivider ? <Divider mt={5} mb={15} color=\"gray\" /> : null}\n    </>\n  ) : null;\n}\n","import React from 'react';\nimport {\n  Page,\n  Document,\n  StyleSheet,\n  View,\n  PDFViewer,\n} from '@react-pdf/renderer';\nimport { useFormReducer } from '../../context';\nimport { reduceToValue } from '../../utils';\n// import formData from '../../defaultData.json';\n\nimport Header from './Header';\nimport Profile from './Profile';\nimport Skills from './Skills';\nimport GenericSection from './GenericSection';\n\nconst styles = StyleSheet.create({\n  page: {\n    width: '100%',\n    paddingVertical: 35,\n    paddingHorizontal: 40,\n    // fontFamily: 'Times-Roman',\n  },\n});\n\nconst Preview = () => {\n  const { data } = useFormReducer();\n  const formData = reduceToValue(data);\n  const content = [\n    (withDivider) => (\n      <GenericSection\n        name=\"Experience\"\n        data={formData.experience}\n        mappings={[\n          'position',\n          'startDate',\n          'endDate',\n          'company',\n          'description',\n        ]}\n        withDivider={withDivider}\n      />\n    ),\n    (withDivider) => (\n      <GenericSection\n        name=\"Education\"\n        data={formData.education}\n        mappings={['school', 'startDate', 'endDate', 'degree']}\n        withDivider={withDivider}\n      />\n    ),\n    (withDivider) => (\n      <GenericSection\n        name=\"Training / Certifications\"\n        data={formData.training}\n        mappings={['name', 'startDate', 'endDate']}\n        withDivider={withDivider}\n      />\n    ),\n    (withDivider) => (\n      <Skills data={formData.personal[0].skills} withDivider={withDivider} />\n    ),\n  ];\n\n  return (\n    <PDFViewer width=\"100%\" height=\"700px\">\n      <Document className=\"preview\">\n        <Page size=\"A4\" style={styles.page} wrap>\n          <Header data={formData.personal[0]} />\n          <Profile data={formData.personal[0].details} />\n          {content.map((section, i) => (\n            <View key={i}>{section(i + 1 !== content.length)}</View>\n          ))}\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default Preview;\n","import isDate from 'date-fns/isDate';\nimport format from 'date-fns/format';\n\nexport const reduceToValue = (data) =>\n  Object.entries(data).reduce((reducedData, [name, blockData]) => {\n    reducedData[name] = blockData.groups\n      .map((group) =>\n        Object.entries(group.fields).reduce((groupData, [field, value]) => {\n          groupData[field] = isDate(value.value)\n            ? format(value.value, 'MMM. d, y')\n            : value.value.trim() || '';\n\n          return groupData;\n        }, {})\n      )\n      .filter((group) => !Object.values(group).every((value) => !value));\n\n    return reducedData;\n  }, {});\n","import React, { useEffect } from 'react';\nimport { useDebounce } from '../hooks';\nimport { useFormReducer } from '../context';\n\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport PhoneField from 'material-ui-phone-number';\nimport { DatePicker } from '@material-ui/pickers';\n\nconst FormGroup = ({\n  id,\n  blockName,\n  blockStyle,\n  fields,\n  data,\n  multiple,\n  deleteHandler,\n}) => {\n  const [debouncedFormData, formData, setFormData] = useDebounce(data, 300);\n  const { dispatch } = useFormReducer();\n\n  useEffect(() => {\n    dispatch({\n      type: 'UPDATE',\n      payload: {\n        blockName,\n        groupId: id,\n        data: debouncedFormData,\n      },\n    });\n  }, [debouncedFormData, id, blockName, dispatch]);\n\n  // This is used to reflect the errors caught on submit\n  // * Remove if there's onsubmit validation\n  // ! This may cause unnecessary renders\n  useEffect(() => {\n    setFormData(data);\n  }, [data, setFormData]);\n\n  const validateInput = (name, value) => {\n    const fieldSchema = fields[name];\n    const errorMsg =\n      fieldSchema.required && !value.trim()\n        ? 'This field is required'\n        : fieldSchema.validate && fieldSchema.validate(value);\n\n    return errorMsg;\n  };\n\n  const handleChange = (name, value) => {\n    const fieldData = formData[name];\n    const isInvalid = fieldData.error;\n    const newData = { ...fieldData, value };\n\n    if (isInvalid) {\n      const errorMsg = validateInput(name, value);\n      newData.error = !!errorMsg;\n      newData.errorMsg = errorMsg;\n    }\n    setFormData((prevData) => ({ ...prevData, [name]: newData }));\n  };\n\n  const handleBlur = (name, value) => {\n    const errorMsg = validateInput(name, value);\n\n    const newData = {\n      value: value,\n      error: !!errorMsg,\n      errorMsg: errorMsg || '',\n    };\n\n    setFormData((prevData) => ({ ...prevData, [name]: newData }));\n  };\n\n  const createInput = (type, name, props) => {\n    switch (type) {\n      case 'phone':\n        return (\n          <PhoneField\n            {...props}\n            defaultCountry={'ph'}\n            onBlur={(e) => handleBlur(name, e.target.value)}\n            onChange={(value) => handleChange(name, value)}\n          />\n        );\n      case 'date':\n        return (\n          <DatePicker\n            {...props}\n            onChange={(date) => handleChange(name, date)}\n            onAccept={(date) => handleBlur(name, date)}\n            placeholder=\"14/01/1970\"\n            format=\"dd/MM/yyyy\"\n            inputVariant=\"outlined\"\n            clearable\n            disableFuture\n          />\n        );\n      default:\n        return (\n          <TextField\n            {...props}\n            type={type === 'multiline' ? 'text' : type}\n            onChange={(e) => handleChange(name, e.target.value)}\n            onBlur={(e) => handleBlur(name, e.target.value)}\n          />\n        );\n    }\n  };\n\n  const inputFields = Object.entries(fields).map(([name, schema]) => {\n    const props = {\n      label: schema.displayName,\n      defaultValue: schema.defaultValue,\n      value:\n        formData[name].value || (schema.type === 'date' ? null : undefined),\n      error: formData[name].error || false,\n      helperText: formData[name].errorMsg || schema.helperText || '',\n      placeholder: schema.placeholder || '',\n      inputProps: { name },\n      InputLabelProps: schema.type === 'date' ? { shrink: true } : null,\n      variant: blockStyle.variant,\n      rows: schema.muiStyle.rows,\n      fullWidth: schema.muiStyle.fullWidth || true,\n      required: schema.required,\n      autoComplete: schema.autocomplete,\n    };\n\n    if (schema.type === 'multiline') {\n      props.multiline = true;\n    }\n\n    return (\n      // Assume that schema always has muiStyle\n      <Grid item key={id + name} {...schema.muiStyle.span}>\n        {createInput(schema.type, name, props)}\n      </Grid>\n    );\n  });\n\n  return (\n    <Box mb={3}>\n      <Grid container spacing={2}>\n        {inputFields}\n      </Grid>\n\n      {multiple && (\n        <Box mt={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => deleteHandler(id)}\n          >\n            Delete\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default FormGroup;\n","import { useEffect, useState } from 'react';\n\nexport default function useDebounce(initialState, delay) {\n  const [value, setValue] = useState(initialState);\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return [debouncedValue, value, setValue];\n}\n","import React from 'react';\nimport { useFormReducer } from '../context';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from './FormGroup';\n\nconst FormBlock = ({ blockName, schema }) => {\n  const { data, dispatch } = useFormReducer();\n\n  const handleAdd = () => {\n    dispatch({\n      type: 'ADD',\n      payload: {\n        blockName,\n      },\n    });\n  };\n\n  const handleDelete = (id) => {\n    dispatch({\n      type: 'DELETE',\n      payload: {\n        blockName,\n        groupId: id,\n      },\n    });\n  };\n\n  return (\n    <Box mb={5}>\n      <Typography variant=\"h4\" gutterBottom>\n        {schema.displayName}\n      </Typography>\n\n      {data[blockName].groups.map(({ id, fields }) => (\n        <FormGroup\n          key={id}\n          id={id}\n          blockName={blockName}\n          blockStyle={schema.muiStyle}\n          fields={schema.fields}\n          data={fields}\n          multiple={schema.multiple}\n          deleteHandler={handleDelete}\n        />\n      ))}\n\n      {schema.multiple && (\n        <Box mt={1}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleAdd}>\n            Add {schema.displayName}\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default FormBlock;\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport FormBlock from './FormBlock';\nimport { useFormReducer } from '../context';\n\nconst Form = ({ schema, onSubmit }) => {\n  const { data, dispatch } = useFormReducer();\n\n  const validateInput = (value, fieldSchema) => {\n    const errorMsg =\n      fieldSchema.required && !value.trim()\n        ? 'This field is required'\n        : fieldSchema.validate && fieldSchema.validate(value);\n\n    return errorMsg;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newData = {};\n    let errors = [];\n\n    Object.entries(data).forEach(([blockName, data]) => {\n      newData[blockName] = {\n        ...data,\n        groups: data.groups.map((group) => {\n          const newGroupData = {};\n\n          Object.entries(group.fields).forEach(([fieldName, value]) => {\n            const fieldSchema = schema[blockName].fields[fieldName];\n\n            const errorMsg = validateInput(value.value, fieldSchema);\n\n            if (errorMsg) {\n              errors.push([fieldSchema.displayName, errorMsg]);\n            }\n\n            newGroupData[fieldName] = {\n              ...value,\n              errorMsg: errorMsg || '',\n              error: !!errorMsg,\n            };\n          });\n\n          return { id: group.id, fields: newGroupData };\n        }),\n      };\n    });\n\n    dispatch({\n      type: 'WRITE',\n      payload: {\n        data: newData,\n      },\n    });\n\n    onSubmit(errors);\n    // e.target.reset()\n  };\n\n  return (\n    <form onSubmit={handleSubmit} noValidate={true}>\n      {Object.entries(schema).map(([name, blockSchema]) => (\n        <FormBlock key={name} blockName={name} schema={blockSchema} />\n      ))}\n      <Box display=\"flex\" justifyContent=\"center\" mb={3}>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport cvFormSchema from './schema/cvForm';\n\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Preview from './components/Preview';\nimport Form from './components/Form';\nimport { FormProvider } from './context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nconst App = () => {\n  const isDarkModeEnabled = useMediaQuery('(prefers-color-scheme: dark)');\n  const [showPreview, setShowPreview] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  const handleSubmit = (errors) => {\n    if (errors.length) {\n      setErrorMessages(errors.map((error) => error.join(': ')));\n      window.scrollTo(0, 0);\n    } else {\n      setErrorMessages([]);\n      setShowPreview(true);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={isDarkModeEnabled ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <Paper square={true} elevation={3} component=\"header\">\n        <Box\n          height=\"4rem\"\n          width=\"90%\"\n          mb={3}\n          mx=\"auto\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <h1 className=\"header__title\">CV Maker</h1>\n        </Box>\n      </Paper>\n      <Container maxWidth={'md'}>\n        <Box mb={3}>\n          {errorMessages.length !== 0 && (\n            <Alert severity=\"error\" style={{ width: '100%' }}>\n              <AlertTitle>Error</AlertTitle>\n              <ul style={{ margin: 0, padding: 0 }}>\n                {errorMessages.map((msg, i) => (\n                  <li key={i}>{msg}</li>\n                ))}\n              </ul>\n            </Alert>\n          )}\n        </Box>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <FormProvider schema={cvFormSchema}>\n            {showPreview ? (\n              <Box mt={3}>\n                <Box p={2} mb={2} display=\"flex\" justifyContent=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => setShowPreview(false)}\n                  >\n                    Go Back to Editing\n                  </Button>\n                </Box>\n                <Preview />\n              </Box>\n            ) : (\n              <Form schema={cvFormSchema} onSubmit={handleSubmit} />\n            )}\n          </FormProvider>\n        </MuiPickersUtilsProvider>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}